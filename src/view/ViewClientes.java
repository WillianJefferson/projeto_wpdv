package view;

import model.ModelClientes;
import controller.IncluirDAOClientes;
import controller.PesquisarDAO;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/*
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import controller.PesquisarDAOClientes;
import java.util.ArrayList;
*/


public class ViewClientes extends javax.swing.JFrame {
//IncluirDAO DAO;
PesquisarDAO DAOPES = new PesquisarDAO();    
IncluirDAOClientes DAOC;
ModelClientes objpes = new ModelClientes();
//PesquisarDAOClientes controllerCliente = new PesquisarDAOClientes();
ArrayList<ModelClientes> listaModelCliente = new ArrayList<>();

String tipoCadastro;
    
    /** Creates new form Clientes */
    public ViewClientes() {
        initComponents();
        carregarClientes();
        //setLocationRelativeTo(null);

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfPesquisaCliente = new javax.swing.JTextField();
        btPesquisaCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        tfCidade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        tfUf = new javax.swing.JTextField();
        tfCep = new javax.swing.JTextField();
        tfTelefone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btNovo = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();
        tfId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(tfPesquisaCliente);
        tfPesquisaCliente.setBounds(10, 180, 394, 30);

        btPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Search.png"))); // NOI18N
        btPesquisaCliente.setText("Pesquisar");
        btPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btPesquisaCliente);
        btPesquisaCliente.setBounds(410, 180, 120, 30);

        jLabel1.setText("Nome:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(89, 10, 60, 14);

        tfNome.setEditable(false);
        getContentPane().add(tfNome);
        tfNome.setBounds(89, 30, 425, 30);

        jLabel2.setText("Endereço:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(318, 122, 80, 14);

        tfEndereco.setEditable(false);
        getContentPane().add(tfEndereco);
        tfEndereco.setBounds(318, 139, 205, 30);

        tfCidade.setEditable(false);
        getContentPane().add(tfCidade);
        tfCidade.setBounds(10, 139, 153, 30);

        jLabel3.setText("Cidade:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 122, 70, 14);

        jLabel4.setText("E-mail:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(140, 68, 70, 14);

        jLabel5.setText("UF:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(173, 122, 30, 14);

        jLabel6.setText("CEP:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(228, 122, 60, 14);

        tfEmail.setEditable(false);
        getContentPane().add(tfEmail);
        tfEmail.setBounds(136, 88, 277, 30);

        tfUf.setEditable(false);
        getContentPane().add(tfUf);
        tfUf.setBounds(173, 139, 37, 30);

        tfCep.setEditable(false);
        getContentPane().add(tfCep);
        tfCep.setBounds(228, 139, 72, 30);

        tfTelefone.setEditable(false);
        getContentPane().add(tfTelefone);
        tfTelefone.setBounds(10, 88, 116, 30);

        jLabel7.setText("Telefone:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 68, 80, 14);

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        getContentPane().add(btNovo);
        btNovo.setBounds(320, 420, 100, 27);

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Modify.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btAlterar);
        btAlterar.setBounds(220, 420, 100, 27);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btCancelar);
        btCancelar.setBounds(10, 420, 110, 27);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btSalvar);
        btSalvar.setBounds(420, 420, 100, 27);

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(jbExcluir);
        jbExcluir.setBounds(120, 420, 100, 27);

        tbClientes.setAutoCreateRowSorter(true);
        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbClientes);
        if (tbClientes.getColumnModel().getColumnCount() > 0) {
            tbClientes.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 220, 510, 189);

        tfId.setEditable(false);
        tfId.setEnabled(false);
        getContentPane().add(tfId);
        tfId.setBounds(10, 30, 73, 30);

        jLabel8.setText("Código:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 10, 50, 14);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo.jpg"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 560, 470);

        setSize(new java.awt.Dimension(561, 502));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.desabilitarCampos();
    }//GEN-LAST:event_btCancelarActionPerformed
    
    
    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        habilitarCampos();
        recuperarCliente();
        tipoCadastro = "alteracao";
    }//GEN-LAST:event_btAlterarActionPerformed
    
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (tipoCadastro.equals("novo")){
            salvarCliente();
        } else if(tipoCadastro.equals("alteracao")){
            try {
                alteraCliente();
            } catch (SQLException ex) {
                Logger.getLogger(ViewClientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed
    
    
    
    private void habilitarCampos(){
        tfNome.setEditable(true);
        tfEndereco.setEditable(true);
        tfCidade.setEditable(true);
        tfEmail.setEditable(true);
        tfCep.setEditable(true);
        tfUf.setEditable(true);
        tfTelefone.setEditable(true);
        btSalvar.setEnabled(true);
        
        objpes = new ModelClientes();
    }
    
    protected void desabilitarCampos(){
        tfNome.setEditable(false);
        tfEndereco.setEditable(false);
        tfCidade.setEditable(false);
        tfEmail.setEditable(false);
        tfCep.setEditable(false);
        tfUf.setEditable(false);
        tfTelefone.setEditable(false);
        btSalvar.setEnabled(false);
        
        objpes = new ModelClientes();
        
        
        
    }
    
    private boolean recuperarCliente() {
        //recebe a linha selecionada
        int linha = this.tbClientes.getSelectedRow();

        //pega o codigo do cliente na linha selecionada
        int codigo = (Integer) tbClientes.getValueAt(linha, 0);

        try {
            //recupera os dados do banco
            objpes = DAOPES.Pesquisar(codigo);
            //seta os dados na interface
            this.tfId.setText(String.valueOf(objpes.getId()));
            this.tfNome.setText(objpes.getNome());
            this.tfEndereco.setText(objpes.getEndereco());
            this.tfEmail.setText(objpes.getEmail());
            this.tfCidade.setText(objpes.getCidade());
            this.tfUf.setText(objpes.getUf());
            this.tfCep.setText(objpes.getCep());
            this.tfTelefone.setText(objpes.getTelefone());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }
    
    
    
    private void carregarClientes() {
        listaModelCliente = DAOPES.getListaClienteDAO();
        DefaultTableModel modelo =  (DefaultTableModel) tbClientes.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaModelCliente.size();
        System.out.println(cont + " " + listaModelCliente.get(0).getNome());
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelCliente.get(i).getId(),
                listaModelCliente.get(i).getNome(),
                listaModelCliente.get(i).getEmail(),
                listaModelCliente.get(i).getUf()
                //listaModelCliente.get(i).getCodigo(),
                //listaModelCliente.get(i).getNome(),
                //listaModelCliente.get(i).getCidade(),
               // listaModelCliente.get(i).getUf()
            });
        }
    }
    
    
    private void salvarCliente(){
     objpes = new ModelClientes();
       
     objpes.setNome(tfNome.getText());
     objpes.setEndereco(tfEndereco.getText());
     objpes.setCidade(tfCidade.getText());
     objpes.setEmail(tfEmail.getText());
     objpes.setUf(tfUf.getText());
     objpes.setCep(tfCep.getText());
     objpes.setTelefone(tfTelefone.getText());
     
     DAOC = new IncluirDAOClientes();
    try {
        if(DAOC.Incluir(objpes)){
            JOptionPane.showMessageDialog(this,"Registro salvo com sucesso!");
        this.carregarClientes(); 
        }        
        
// TODO add your handling code here:
    }catch (SQLException ex){
        //Logger.getLogger(ViewProdutos.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    private boolean alteraCliente() throws SQLException {
        objpes.setId(Integer.parseInt(this.tfId.getText()));
        objpes.setNome(this.tfNome.getText());
        objpes.setEndereco(this.tfEndereco.getText());
        objpes.setEmail(this.tfEmail.getText());
        objpes.setCidade(this.tfCidade.getText());
        objpes.setUf(this.tfUf.getText());
        objpes.setCep(this.tfCep.getText());
        objpes.setTelefone(this.tfTelefone.getText());

        //alterar 
        if (DAOPES.atualizarClienteDAO(objpes)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            this.desabilitarCampos();
            this.carregarClientes();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    
    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        this.habilitarCampos();
        tipoCadastro = "novo";
    }//GEN-LAST:event_btNovoActionPerformed
        
    private void btPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaClienteActionPerformed
        DAOPES = new PesquisarDAO();
        objpes = new ModelClientes();
        String id = tfPesquisaCliente.getText().trim();

        try {
            objpes = DAOPES.Pesquisar(Integer.parseInt(id));

            if (objpes != null) { // encontrou o registro    
                tfId.setText(String.valueOf(objpes.getId()));
                tfNome.setText(String.valueOf(objpes.getNome()));
                tfEndereco.setText(objpes.getEndereco());
                tfEmail.setText(objpes.getEmail());
                tfCidade.setText(objpes.getCidade());
                tfUf.setText(objpes.getUf());
                tfCep.setText(objpes.getCep());
                tfTelefone.setText(objpes.getTelefone());
                carregarClientes();
                
            } else {
                JOptionPane.showMessageDialog(this, "Código Inválido");
                desabilitarCampos();

            }

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_btPesquisaClienteActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        
    }//GEN-LAST:event_jbExcluirActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewClientes().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btPesquisaCliente;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JTable tbClientes;
    protected javax.swing.JTextField tfCep;
    protected javax.swing.JTextField tfCidade;
    protected javax.swing.JTextField tfEmail;
    protected javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfId;
    protected javax.swing.JTextField tfNome;
    protected javax.swing.JTextField tfPesquisaCliente;
    protected javax.swing.JTextField tfTelefone;
    protected javax.swing.JTextField tfUf;
    // End of variables declaration//GEN-END:variables
    
}
